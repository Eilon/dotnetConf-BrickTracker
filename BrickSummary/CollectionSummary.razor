@*<div class="my-component">
    This component is defined in the <strong>BrickSummary</strong> library.
</div>*@

@if (Sets == null)
{
    <div>Loading brick sets...</div>
}
else
{
    <div>@Sets.Sets.Count sets</div>
    <ul>
        @foreach (var themeSets in Sets.Sets.GroupBy(s => s.Theme).OrderByDescending(t => t.Count()))
        {
            <li>@themeSets.Key (@themeSets.Count())
                <ul>
                    @foreach (var set in themeSets.OrderBy(s => s.Pieces ?? 0))
                    {
                        <li>@set.Number: @set.Set_name @GetVolumeString(set)</li>
                    }
                </ul>
            </li>
        }
    </ul>
}

@code
{
    [Parameter] public BrickSetCollection? Sets { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

    }

    private decimal? GetVolume(BrickSetItem set)
    {
        var volume = set.Width * set.Height * set.Depth;
        return volume;
    }

    private string GetVolumeString(BrickSetItem set)
    {
        var volume = GetVolume(set);
        if (volume == null)
        {
            return string.Empty;
        }
        return string.Format("{0:n0}cm³", volume);
    }
}
